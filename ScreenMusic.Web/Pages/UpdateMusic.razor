@page "/UpdateMusic/{Name}"
@using ScreenMusic.Arguments
@inject ArtistServiceClient artistasAPI
@inject MusicGenreServiceClient generoAPI
@inject MusicServiceClient musicaAPI
@inject NavigationManager navigationManager

<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">

    <MudText Class="mt-8" Typo="Typo.h4">Edição de Música</MudText>

    <MudForm>

        <MudTextField Class="mt-4" T="string" Placeholder="Nome da música/canção"
                      @bind-Value="name"
                      Variant="Variant.Outlined"
                      Required="true"
                      RequiredError="Campo obrigatório." />

        <MudSelect Class="mt-4" T="OutputArtist" Label="Artistas" Variant="Variant.Outlined" ValueChanged="ArtistaSelecionado" AnchorOrigin="Origin.BottomCenter">
            @if (ListArtist is not null)
                @foreach (var artista in ListArtist)
                {
                    <MudSelectItem Value="artista" />
                }
        </MudSelect>

        <MudNumericField Class="mt-4" Placeholder="Ano de lançamento"
                         @bind-Value="releaseYear"
                         Variant="Variant.Outlined"
                         Lines="1"
                         Required="true"
                         RequiredError="Campo obrigatório." />

        <MudSelect Class="mt-4" T="OutputMusicGenre" Label="Gênero" Variant="Variant.Outlined" @bind-Value="GeneroDaMusica" AnchorOrigin="Origin.BottomCenter">
            @if (ListMusicGenre is not null)
                @foreach (var genero in ListMusicGenre)
                {
                    <MudSelectItem Value="genero" />
                }
        </MudSelect>

        <div class="d-flex justify-space-between align-center mt-4">
            <MudButton Variant="Variant.Filled"
                       Color="Color.Info"
                       @onclick="Return">
                Voltar
            </MudButton>
            <div>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           Class="ml-3"
                           @onclick="Update">
                    Salvar
                </MudButton>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Secondary"
                           Class="ml-3"
                           @onclick="Delete">
                    Deletar
                </MudButton>
            </div>
        </div>

    </MudForm>

</MudPaper>

@code {
    private int releaseYear;
    private string name;

    private ICollection<OutputArtist>? ListArtist;
    private ICollection<OutputMusicGenre>? ListMusicGenre;

    private OutputMusicGenre? GeneroDaMusica { get; set; }
    private OutputArtist? ArtistaDaMusica { get; set; }

    public OutputMusic? Music { get; set; }

    [Parameter]
    public string? Name { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Music = await musicaAPI.GetByName(new InputIdentifierMusic(Name!));
        releaseYear = Music!.ReleaseYear;
        name = Music!.Name;
        ArtistaDaMusica = new OutputArtist() { Id = Music.ArtistaId, Name = Music.Name };
        GeneroDaMusica = new OutputMusicGenre() { Id = Music.MusicGenreId };
        ListArtist = await artistasAPI.GetAll();
        ListMusicGenre = await generoAPI.GetAll();
    }

    private void ArtistaSelecionado(OutputArtist artista)
    {
        ArtistaDaMusica = artista;
    }

    private void GeneroSelecionado(OutputMusicGenre genero)
    {
        GeneroDaMusica = genero;
    }

    private async Task Update()
    {
        var requestEdit = new InputUpdateMusic(name, releaseYear, ArtistaDaMusica!.Id, GeneroDaMusica!.Id);
        await musicaAPI.Update(Music!.Id, requestEdit);
        navigationManager.NavigateTo("/MusicByArtist");
    }

    public async Task Delete()
    {
        await musicaAPI.Delete(Music!.Id);
        navigationManager.NavigateTo("/MusicByArtist");
    }

    private void Return()
    {
        navigationManager.NavigateTo("/MusicByArtist");
    }
}