@page "/Artist"
@using ScreenMusic.Arguments
@inject ArtistServiceClient artistServiceClient

<MudStack Class="mt-4 mb-4" Row="true" Justify="Justify.SpaceBetween">
    <MudText Class="mb-4" Typo="Typo.h4">Artistas cadastrados</MudText>
    <MudPagination Count="@totalPage" SelectedChanged="PageChange"></MudPagination>
</MudStack>

@if (ListArtistByPage is not null)
{
    <MudGrid>
        @foreach (var artist in ListArtistByPage)
        {
            <MudItem xs="3">
                <CardArtist Artist="artist" />
            </MudItem>
        }
    </MudGrid>
}

@code {
    private int tamanho = 8;
    private int totalItem;
    private int totalPage;
    private ICollection<OutputArtist>? ListArtist;
    private ICollection<OutputArtist>? ListArtistByPage;

    protected override async Task OnInitializedAsync()
    {
        ListArtist = await artistServiceClient.GetAll();
        if (ListArtist is not null)
        {
            ListArtist = ListArtist.OrderByDescending(a => a.Id).ToList();
            totalItem = ListArtist.Count();
            totalPage = Convert.ToInt32(Math.Ceiling((totalItem * 1.0) / tamanho));
            this.PageChange(1);
        }
    }

    private void PageChange(int pageNumber)
    {
        var indice = pageNumber - 1;
        ListArtistByPage = ListArtist!.Skip(tamanho * indice).Take(tamanho).ToList();
    }
}