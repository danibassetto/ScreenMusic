@page "/UpdateArtist/{Name}"
@using ScreenMusic.Arguments
@inject ArtistServiceClient artistServiceClient
@inject NavigationManager navigationManager

@if (Artist is not null)
{
    <MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">

        <MudText Class="mt-8" Typo="Typo.h4">Edição de Artista</MudText>

        <MudForm>

            <MudTextField Class="mt-4" T="string" Placeholder="Nome do Artista" Variant="Variant.Outlined" @bind-Value="name" Required="true" RequiredError="Campo obrigatório." />

            <MudTextField Class="mt-4" T="string" Placeholder="Biografia do artista" Variant="Variant.Outlined" @bind-Value="biography" Lines="4" Required="true" RequiredError="Campo obrigatório." />

            <div class="d-flex justify-space-between align-center mt-4">
                <MudButton Variant="Variant.Filled" Color="Color.Info" @onclick="Return">Voltar</MudButton>
                <div>
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" Class="ml-3" @onclick="Delete">Deletar</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-3" @onclick="Update"> Salvar</MudButton>
                </div>
            </div>

        </MudForm>
    </MudPaper>
}
else
{
    <MudProgressCircular Indeterminate="true"></MudProgressCircular>
}

@code {
    private string? name;
    private string? biography;
    public OutputArtist? Artist { get; set; }

    [Parameter]
    public string? Name { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Artist = await artistServiceClient.GetByName(new InputIdentifierArtist(Name!));
        name = Artist!.Name;
        biography = Artist!.Biography;
    }

    private async Task Delete()
    {
        await artistServiceClient.Delete(Artist!.Id);
        navigationManager.NavigateTo("/Artist");
    }

    private async Task Update()
    {
        var requestEdit = new InputUpdateArtist(name!, Artist!.ProfilePhoto!, biography!);
        await artistServiceClient.Update(Artist!.Id, requestEdit);
        navigationManager.NavigateTo("/Artist");
    }

    private void Return()
    {
        navigationManager.NavigateTo("/Artist");
    }
}