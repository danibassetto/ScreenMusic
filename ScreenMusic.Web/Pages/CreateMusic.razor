@page "/CreateMusic"
@using ScreenMusic.Arguments
@inject ArtistServiceClient artistServiceClient
@inject MusicGenreServiceClient musicGenreServiceClient
@inject MusicServiceClient musicServiceClient
@inject NavigationManager navigationManager

<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">

    <MudText Class="mt-8" Typo="Typo.h4">Cadastro de Música</MudText>

    <MudForm>

        <MudTextField Class="mt-4" T="string" Placeholder="Nome da música/canção" @bind-Value="name" Variant="Variant.Outlined" Required="true" RequiredError="Campo obrigatório." />
        <MudTextField Class="mt-4" T="string" Placeholder="Link do Youtube" @bind-Value="youtubeLink" Variant="Variant.Outlined" Required="true" RequiredError="Campo obrigatório." />

        <div class="d-flex justify-content-between align-items-center mt-4">
            <MudSelect Class="mr-2" T="OutputArtist" Label="Artistas" Variant="Variant.Outlined" @bind-Value="Artist">
                @if (ListArtist is not null)
                    @foreach (var artist in ListArtist)
                    {
                        <MudSelectItem Value="artist">@artist.Name</MudSelectItem>
                    }
            </MudSelect>

            <MudNumericField Class="mr-2" T="int" Placeholder="Ano de lançamento" @bind-Value="releaseYear" Variant="Variant.Outlined" Required="true" RequiredError="Campo obrigatório." />

            <MudSelect Class="ml-2" T="OutputMusicGenre" Label="Gêneros" Variant="Variant.Outlined" @bind-Value="MusicGenre">
                @if (ListMusicGenre is not null)
                    @foreach (var musicGenre in ListMusicGenre)
                    {
                        <MudSelectItem Value="musicGenre">@musicGenre.Name</MudSelectItem>
                    }
            </MudSelect>
        </div>

        <div class="d-flex justify-space-between align-center mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Info" @onclick="Return">Voltar</MudButton>
            <div>
                <MudButton Variant="Variant.Filled" @onclick="Create" Color="Color.Primary" Class="ml-auto">Cadastrar</MudButton>
            </div>
        </div>

    </MudForm>

</MudPaper>

@code {
    private int releaseYear;
    private string? youtubeLink;
    private string? name;

    private ICollection<OutputArtist>? ListArtist;
    private ICollection<OutputMusicGenre>? ListMusicGenre;

    private OutputArtist? Artist { get; set; }
    private OutputMusicGenre? MusicGenre { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ListArtist = await artistServiceClient.GetAll();
        ListMusicGenre = await musicGenreServiceClient.GetAll();
    }

    public async Task Create()
    {
        if (Artist != null && MusicGenre != null)
        {
            var musicaRequest = new InputCreateMusic(name!, releaseYear, Artist.Id, MusicGenre.Id, youtubeLink!);
            await musicServiceClient.Create(musicaRequest);
            navigationManager.NavigateTo("/Music");
        }
    }

    private void Return()
    {
        navigationManager.NavigateTo("/Music");
    }
}